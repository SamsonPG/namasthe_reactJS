Theory Assignment:
What is NPM?

NPM (Node Package Manager) is a package manager for Node.js and JavaScript. It allows developers to discover, share, and reuse code packages and libraries. NPM comes bundled with Node.js installation and is used to install, manage, and publish packages.
What is Parcel/Webpack? Why do we need it?

Parcel and Webpack are both module bundlers for JavaScript applications. They help manage dependencies, assets, and code organization in modern web development projects. We need them to bundle and optimize JavaScript, CSS, and other assets for efficient delivery to the browser.
What is .parcel-cache?

.parcel-cache is a directory created by Parcel to store cached data to speed up subsequent builds. It helps improve build performance by reusing previously processed files and dependencies.
What is npx?

npx is a package runner tool that comes with NPM. It allows executing Node packages directly, without the need to install them globally. npx executes the command and installs the package temporarily, ensuring that the correct version of the package is used.
What is the difference between dependencies vs devDependencies?

dependencies are packages required for the application to run in production, while devDependencies are packages used during development, such as testing frameworks, build tools, and utilities. dependencies are essential for the application's functionality, while devDependencies are not required for the deployed application.
What is Tree Shaking?

Tree shaking is a process used by bundlers like Webpack and Parcel to eliminate dead code (unused exports) from the final bundle. It analyzes the dependency tree of the application and removes any code that is not explicitly imported or used, thus reducing the bundle size.
What is Hot Module Replacement?

Hot Module Replacement (HMR) is a feature in Webpack and other bundlers that allows modules to be replaced or updated in real-time without a full page reload during development. It enables developers to see changes immediately reflected in the browser, making the development process faster and more efficient.
List down your favorite 5 superpowers of Parcel and describe any 3 of them in your own words.

Some superpowers of Parcel include:
Zero configuration setup: Parcel requires no configuration to start building projects.
Automatic asset transformation: Parcel automatically transforms assets like CSS, HTML, and images without additional configuration.
Blazing-fast builds: Parcel provides fast build times due to its multi-core processing and caching mechanisms.
What is .gitignore? What should we add and not add into it?

.gitignore is a file that specifies intentionally untracked files to be ignored by Git. It should include files and directories that are generated during the build process, contain sensitive information, or are specific to the developer's environment. Files that should not be added to version control should be listed in .gitignore.
What is the difference between package.json and package-lock.json?

package.json contains metadata about the project and its dependencies, while package-lock.json is automatically generated by NPM to lock down the versions of dependencies installed in node_modules. It ensures that subsequent installs of the project use the exact same versions of dependencies to maintain consistency across different environments.
Project Assignment:
These assignments involve setting up a React project with NPM, installing dependencies, configuring Parcel, setting up build scripts, adding necessary files like .gitignore, and building a production version of the application using Parcel.